services:
  frontend:
    build:
      context: ./frontend
    command: --brotli
    networks:
      - internal
      - traefik
    depends_on:
      - backend
    environment:
      VITE_BACKEND_URL: backend.${HOST}
    labels:
      traefik.enable: true

      traefik.http.routers.frontend.rule: Host(`${HOST}`) || Host(`www.${HOST}`)
      traefik.http.services.frontend.loadbalancer.server.port: 8080
      traefik.http.routers.frontend.middlewares: redirect-to-non-www
      traefik.http.middlewares.redirect-to-non-www.redirectregex.regex: ^https?://www.${HOST}/(.*)
      traefik.http.middlewares.redirect-to-non-www.redirectregex.replacement: https://${HOST}/$${1}
      traefik.http.middlewares.redirect-to-non-www.redirectregex.permanent: true

  backend:
    build:
      context: ./backend
    networks:
      - internal
      - traefik
    depends_on:
      - db
      - redis
      - minio
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      HOST: ${HOST}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_URL: ${REDIS_URL}
      MINIO_USER: ${MINIO_USER}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    labels:
      traefik.enable: true

      traefik.http.routers.backend.rule: Host(`backend.${HOST}`)
      traefik.http.services.backend.loadbalancer.server.port: 8000

      traefik.http.routers.webhook.rule: Host(`webhook.${HOST}`)
      traefik.http.routers.webhook.middlewares: addprefix-webhook
      traefik.http.middlewares.addprefix-webhook.addprefix.prefix: /api/product/webhook
      traefik.http.services.webhook.loadbalancer.server.port: 8000

      traefik.http.routers.redirect.rule: Host(`redirect.${HOST}`)
      traefik.http.routers.redirect.middlewares: addprefix-redirect
      traefik.http.middlewares.addprefix-redirect.addprefix.prefix: /api/redirects
      traefik.http.services.redirect.loadbalancer.server.port: 8000

      traefik.http.routers.admin.rule: Host(`admin.${HOST}`)
      traefik.http.routers.admin.middlewares: addprefix-admin, redirect-to-root
      traefik.http.middlewares.addprefix-admin.addprefix.prefix: /admin-br
      traefik.http.middlewares.redirect-to-root.redirectregex.regex: ^/admin-br/(.*)
      traefik.http.middlewares.redirect-to-root.redirectregex.replacement: /$$1
      traefik.http.middlewares.redirect-to-root.redirectregex.permanent: true
      traefik.http.services.admin.loadbalancer.server.port: 8000
