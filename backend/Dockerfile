FROM node:20-slim as base

ARG POSTGRES_HOST
ARG POSTGRES_PORT
ARG PORT
ARG NODE_ENV
ARG POSTGRES_USER
ARG POSTGRES_PASSWORD
ARG POSTGRES_DB
ARG TYPEORM_ENTITIES
ARG JWT_SECRET
ARG APP_NAME
ARG RECOVERY_PASSWORD_URL
ARG EMAIL_FROM
ARG REDIS_URL
ARG BREVO_API_KEY
ARG CAPROVER_URL
ARG CAPROVER_PASSWORD

ENV POSTGRES_HOST=${POSTGRES_HOST}
ENV POSTGRES_PORT=${POSTGRES_PORT}
ENV PORT=${PORT}
ENV NODE_ENV=${NODE_ENV}
ENV POSTGRES_USER=${POSTGRES_USER}
ENV POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
ENV POSTGRES_DB=${POSTGRES_DB}
ENV TYPEORM_ENTITIES=${TYPEORM_ENTITIES}
ENV JWT_SECRET=${JWT_SECRET}
ENV APP_NAME=${APP_NAME}
ENV RECOVERY_PASSWORD_URL=${RECOVERY_PASSWORD_URL}
ENV EMAIL_FROM=${EMAIL_FROM}
ENV REDIS_URL=${REDIS_URL}
ENV BREVO_API_KEY=${BREVO_API_KEY}
ENV CAPROVER_URL=${CAPROVER_URL}
ENV CAPROVER_PASSWORD=${CAPROVER_PASSWORD}
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ENV DISABLE_HUSKY="true"
RUN corepack enable

COPY . /app
WORKDIR /app

RUN apt-get update && apt-get install -y git

FROM base AS prod-deps
RUN pnpm install --prod --frozen-lockfile

FROM base AS build
RUN NODE_ENV=development pnpm install --frozen-lockfile
RUN pnpm run build

FROM base

COPY --from=prod-deps /app/node_modules /app/node_modules
COPY --from=build /app/dist /app/dist

EXPOSE 8000

CMD ["pnpm", "start:prod"]
