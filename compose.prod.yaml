services:
  traefik:
    image: "traefik:latest"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${HOST}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      - "traefik.http.routers.dashboard.service=api@internal"
    command:
      - "--providers.docker=true"
      - "--providers.docker.network=traefik"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=vitor036daniel@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http3=true"
      - "--entrypoints.websecure.asdefault=true"
      - "--entrypoints.websecure.http.tls.certresolver=myresolver"
      - "--entrypoints.web.address=:80"
      - "--accesslog"
      - "--log"
      - "--api"
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 443
        published: 443
        protocol: udp
        mode: host
    volumes:
      - "traefik-public-certificates:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik

  portainer:
    image: "portainer/portainer-ce:latest"
    volumes:
      - "portainer:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${HOST}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  minio:
    networks:
      - traefik
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.minio.rule=Host(`minio.${HOST}`)"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.services.minio.loadbalancer.server.port=9001"
      - "traefik.http.routers.minio-api.service=minio-api"

      - "traefik.http.routers.minio-api.rule=Host(`minio-api.${HOST}`)"
      - "traefik.http.routers.minio-api.entrypoints=websecure"
      - "traefik.http.services.minio-api.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio.service=minio"

  migrate:
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432

  frontend:
    build:
      context: .
      target: frontend
    command: --brotli
    networks:
      - zapdiviser
      - traefik
    depends_on:
      - backend
    environment:
      VITE_SOKETI_APP_KEY: ${VITE_SOKETI_APP_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`app.${HOST}`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.services.app.loadbalancer.server.port=8080"

  backend:
    build:
      context: .
      target: backend
    networks:
      - zapdiviser
      - traefik
    depends_on:
      - db
      - redis
      - minio
    environment:
      HOST: ${HOST}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_URL: ${REDIS_URL}
      MINIO_HOST: ${MINIO_HOST}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_USER: ${MINIO_USER}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.backend.rule=Host(`app.${HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.service=backend"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

      - "traefik.http.routers.webhook.rule=Host(`webhook.${HOST}`)"
      - "traefik.http.routers.webhook.entrypoints=websecure"
      - "traefik.http.routers.webhook.service=webhook"
      - "traefik.http.services.webhook.loadbalancer.server.port=8000"
      - "traefik.http.routers.webhook.middlewares=webhook-rewrite"
      - "traefik.http.middlewares.webhook-rewrite.addprefix.prefix=/api/product/webhook"

      - "traefik.http.routers.redirect.rule=Host(`redirect.${HOST}`)"
      - "traefik.http.routers.redirect.entrypoints=websecure"
      - "traefik.http.routers.redirect.service=redirect"
      - "traefik.http.services.redirect.loadbalancer.server.port=8000"
      - "traefik.http.routers.redirect.middlewares=redirect-rewrite"
      - "traefik.http.middlewares.redirect-rewrite.addprefix.prefix=/api/redirects"

      - "traefik.http.routers.admin.rule=Host(`admin.${HOST}`)"
      - "traefik.http.routers.admin.entrypoints=websecure"
      - "traefik.http.routers.admin.service=admin"
      - "traefik.http.services.admin.loadbalancer.server.port=8000"
      - "traefik.http.routers.admin.middlewares=redirect-admin"
      - "traefik.http.middlewares.redirect-admin.addprefix.prefix=/admin-br"

  loki:
    image: grafana/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - zapdiviser

  grafana:
    image: grafana/grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - traefik
      - zapdiviser
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${HOST}`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  backup:
    image: tiredofit/db-backup
    environment:
      TIMEZONE: America/Sao_Paulo
      CONTAINER_ENABLE_MONITORING: FALSE
      DEFAULT_COMPRESSION_LEVE: 19
      DEFAULT_S3_BUCKET: zapdiviser
      DEFAULT_S3_KEY_ID: ${MINIO_ACCESS_KEY}
      DEFAULT_S3_KEY_SECRET: ${MINIO_SECRET_KEY}
      DEFAULT_S3_HOST: minio:9000
      DB01_TYPE: postgres
      DB01_HOST: db
      DB01_NAME: ${POSTGRES_DB}
      DB01_USER: ${POSTGRES_USER}
      DB01_PASS: ${POSTGRES_PASSWORD}
      DB01_CLEANUP_TIME: 10080
      DB01_CHECKSUM: NONE
      DB02_TYPE: redis
      DB02_HOST: redis
      DB02_PASS: ${REDIS_PASSWORD}
      DB02_CLEANUP_TIME: 10080
    restart: always
    networks:
      - zapdiviser

  soketi:
    networks:
      - zapdiviser
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.soketi.rule=Host(`app.${HOST}`) && PathPrefix(`/soketi`)"
      - "traefik.http.routers.soketi.entrypoints=websecure"
      - "traefik.http.services.soketi.loadbalancer.server.port=6001"
      - "traefik.http.routers.soketi.middlewares=soketi-rewrite"
      - "traefik.http.middlewares.soketi-rewrite.stripprefix.prefixes=/soketi"

networks:
  traefik:
    external: true

volumes:
  traefik-public-certificates:
  portainer:
  grafana:
