version: "3.9"

services:
  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - caddy_data:/data
    restart: unless-stopped

  db:
    image: postgres:alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

  registry:
    image: registry:2
    ports:
    - "5000:5000"
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
    volumes:
      - registry:/data

  minio:
    image: bitnami/minio:2024
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - "minio:/data"
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    networks:
      - caddy
    labels:
      caddy_0: minio-api.${HOST}
      caddy_0.reverse_proxy: "{{upstreams 9000}}"
      caddy_1: minio.${HOST}
      caddy_1.reverse_proxy: "{{upstreams 9001}}"
    deploy:
      labels:
        caddy_0: minio-api.${HOST}
        caddy_0.reverse_proxy: "{{upstreams 9000}}"
        caddy_1: minio.${HOST}
        caddy_1.reverse_proxy: "{{upstreams 9001}}"

  createMinioBuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_USER} ${MINIO_PASSWORD};
      /usr/bin/mc admin user add myminio ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      /usr/bin/mc admin policy attach myminio public --user ${MINIO_ACCESS_KEY};
      /usr/bin/mc mb myminio/zapdiviser;
      /usr/bin/mc anonymous set download myminio/zapdiviser;
      exit 0;
      "

networks:
  caddy:
    external: true

volumes:
  caddy_data:
  redis:
  postgres:
  registry:
  minio:
